# Stubs for requests.packages.urllib3.response (Python 3.4)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Undefined, Any
import io
from . import _collections
from . import exceptions
#from .packages import six
from . import connection
from .util import response

HTTPHeaderDict = _collections.HTTPHeaderDict
ProtocolError = exceptions.ProtocolError
DecodeError = exceptions.DecodeError
ReadTimeoutError = exceptions.ReadTimeoutError
binary_type = bytes # six.binary_type
PY3 = True # six.PY3
HTTPException = connection.HTTPException
BaseSSLError = connection.BaseSSLError
is_fp_closed = response.is_fp_closed

class DeflateDecoder:
    def __init__(self): pass
    def __getattr__(self, name): pass
    def decompress(self, data): pass

class GzipDecoder:
    def __init__(self): pass
    def __getattr__(self, name): pass
    def decompress(self, data): pass

class HTTPResponse(io.IOBase):
    CONTENT_DECODERS = Undefined(Any)
    REDIRECT_STATUSES = Undefined(Any)
    headers = Undefined(Any)
    status = Undefined(Any)
    version = Undefined(Any)
    reason = Undefined(Any)
    strict = Undefined(Any)
    decode_content = Undefined(Any)
    def __init__(self, body='', headers=None, status=0, version=0, reason=None, strict=0, preload_content=True, decode_content=True, original_response=None, pool=None, connection=None): pass
    def get_redirect_location(self): pass
    def release_conn(self): pass
    @property
    def data(self): pass
    def tell(self): pass
    def read(self, amt=None, decode_content=None, cache_content=False): pass
    def stream(self, amt=Undefined, decode_content=None): pass
    @classmethod
    def from_httplib(ResponseCls, r, **response_kw): pass
    def getheaders(self): pass
    def getheader(self, name, default=None): pass
    def close(self): pass
    @property
    def closed(self): pass
    def fileno(self): pass
    def flush(self): pass
    def readable(self): pass
    def readinto(self, b): pass
